// Define database connection via the `NEXT_PUBLIC_PRISMA_DATABASE_URL` env var
datasource db {
  provider = "postgresql"
  url      = env("LOCAL_PRISMA_DATABASE_URL")
}

// Define custom output path for generated Prisma Client
generator client {
  provider = "prisma-client-js"
  // Use default output (node_modules/.prisma/client) to avoid absolute paths
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  firstName String?
  lastName  String?
  posts     PostUser[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
}

model Post {
  id        Int        @id @default(autoincrement())
  title     String
  content   String?
  published Boolean    @default(false)
  users     PostUser[]
  images    Images[]
}

model PostUser {
  postId    Int
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@id([postId, userId])
}

model Images {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
}

model Page {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?
  content     String?
  status      String   @default("draft")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  userId      Int? // Son güncelleyen kullanıcı ID'si
  pageSEO     PageSEO? @relation(fields: [pageSEOId], references: [id])
  pageSEOId   Int?     @unique // One-to-one için unique foreign key
}

model PageSEO {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  keywords    String[]
  canonical   String?
  noIndex     Boolean  @default(false)
  noFollow    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  page        Page? // Back-reference (opsiyonel)
}
